// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  conversations Conversation[]
  seenMessages  Message[]      @relation("seen")
  messages      Message[]      @relation("messages")
  accounts      Account[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Conversation {
  id            String   @id @default(uuid())
  name          String?
  isGroup       Boolean?
  lastMessageAt DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userIds       String[]

  users    User[]
  messages Message[]
}

model Message {
  id             String   @id @default(uuid())
  body           String?
  image          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  conversationId String
  seenByIds      String[]
  senderId       String

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender       User         @relation("messages", fields: [senderId], references: [id], onDelete: Cascade)
  seenByUsers  User[]       @relation("seen")
}
